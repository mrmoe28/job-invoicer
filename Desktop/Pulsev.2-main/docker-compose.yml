version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: pulsecrm-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: pulsecrm
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - pulsecrm-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching and pub/sub
  redis:
    image: redis:7-alpine
    container_name: pulsecrm-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - pulsecrm-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # pgAdmin for database administration (optional)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pulsecrm-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@pulsecrm.local
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - pulsecrm-network
    depends_on:
      postgres:
        condition: service_healthy

  # Optional: Database backup service
  postgres-backup:
    image: postgres:15-alpine
    container_name: pulsecrm-backup
    restart: "no"
    environment:
      POSTGRES_DB: pulsecrm
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      PGPASSWORD: password
    volumes:
      - ./backups:/backups
      - ./docker/backup/backup.sh:/backup.sh
    networks:
      - pulsecrm-network
    depends_on:
      postgres:
        condition: service_healthy
    command: >
      sh -c "chmod +x /backup.sh && /backup.sh"
    profiles:
      - backup

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  pulsecrm-network:
    driver: bridge
